#define DEFAULT_STRUCT_SIZE     0xffff
#define MAX_BUFSIZE             0xffff

#define set_uint8_t(buf, pos, val) \
        ( (((uint8_t *)(buf))[pos]) = (uint8_t)(val))
#define set_uint16_t(buf, pos, val) \
         ( (((uint8_t *)(buf))[pos])     = (uint8_t)((val) & 0xff), \
           (((uint8_t *)(buf))[pos + 1]) = (uint8_t)((val) >> 8) )
#define set_uint32_t(buf, pos, val) \
         ( smb_set_u16(buf, pos, val & 0xffff), \
           smb_set_u16(buf, pos + 2, val >> 16) )

struct bcc_struct {
        char *data;     
        uint16_t count;
};

struct wct_struct {
        char *data;
        uint16_t count;
        uint32_t offset;
};

struct SMB_packet {
        uint8_t         NBT_type;
        uint8_t         NBT_flags;
        uint16_t        NBT_length;
        uint8_t         SMB_protocol[4];
        uint8_t         SMB_command;
        uint16_t        SMB_status;
        uint8_t         SMB_reserved;
        uint8_t         SMB_flags;
        uint16_t        SMB_flags2;
        uint8_t         SMB_pad[12];
        uint16_t        SMB_tid;
        uint16_t        SMB_pid;
        uint16_t        SMB_uid;
        uint16_t        SMB_mid;
        uint8_t         SMB_wct;
};

int check_smb_header(struct SMB_packet *packet, int expected_command);

int
build_packet(           char            *buffer,
                        size_t          length,
                        uint8_t         command,
                        uint8_t         flags,
                        uint16_t        flags2,
                        uint16_t        tid,
                        uint16_t        pid,
                        uint16_t        uid,
                        uint16_t        mid,
                        uint8_t         wct,
                        char            *wct_data,
                        uint16_t        bcc,
                        char            *bcc_data);

int
send_packet(    struct SMB_session      *session,
                int                     command,
                uint8_t                 wct,
                char                    *wct_data,
                uint16_t                bcc,
                char                    *bcc_data);

int
recv_packet(    struct SMB_session      *session,
                int                     expected_command);


void init_wct_struct(struct wct_struct *data_structure);
void init_bcc_struct(struct bcc_struct *data_structure);
void free_bcc_struct(struct bcc_struct *data_structure);
void free_wct_struct(struct wct_struct *data_structure);
void add_bcc_uint8_t(struct bcc_struct *data_structure, uint8_t value);
void add_bcc_uint16_t(struct bcc_struct *data_structure, uint16_t value);
void add_wct_uint32_t(struct wct_struct *data_structure, uint32_t value);
void add_bcc_string(struct bcc_struct *data_structure, char *string);
void add_bcc_uint32_t(struct bcc_struct *data_structure, uint32_t value);
void add_wct_uint16_t(struct wct_struct *data_structure, uint16_t value);
void add_wct_uint8_t(struct wct_struct *data_structure, uint8_t value);
void free_data_session(struct SMB_session *session);

